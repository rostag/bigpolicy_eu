## Deployment: cd to project, build, copy assets to the local deploy folder, deploy

cd [project root folder]bp/
yarn
npm run build-prod
rsync -a dist/* fbs/dist
cd fbs
firebase deploy

## Single command:

cd [project root folder]/bp/ && yarn && npm run build-prod && rsync -a dist/* fbs/dist && cd fbs && firebase deploy

=====================

rsync -a dist/* fbs/dist

"Technology recommendations are off-topic on Stack Overflow. 
I've used Cloud Functions (on a paid plan, the cost is quite minimal), App Engine Flex, and Zeit in the past. But there are probably dozens more, many of them with their own advantages"

https://stackoverflow.com/questions/43967510/cloud-functions-for-firebase-and-third-party-api

https://medium.com/google-cloud/creating-a-mongodb-crud-backend-on-google-cloud-functions-88bb5c1cef77

https://stackoverflow.com/questions/6676499/is-there-a-mongoose-connect-error-callback

Docs:
https://firebase.google.com/docs/hosting/url-redirects-rewrites

https://firebase.google.com/docs/hosting/functions

https://github.com/firebase/firebase-functions/issues/27

COOL:
https://codeburst.io/express-js-on-cloud-functions-for-firebase-86ed26f9144c


!!!
https://stackoverflow.com/questions/28305120/differences-between-express-router-and-app-get
https://stackoverflow.com/questions/43579442/cloud-functions-for-firebase-and-express





Didn't read but seem to be useful:
https://github.com/jthegedus/firebase-functions-express-example



firebase serve --only hosting,functions

£££ NNN Reference

# Step 1 - Commit, Build, Pack, Upload:
# On local dev machine: pack to Repo:
cd [project root folder]YYY/YYY
git checkout ui-update
git add . && git commit -m deploy-test-0
ng build --prod
tar -czf YYY-dist.tar.gz dist/
git add . && git commit -m deploy-test-1
git push

    # All commands above — in a single line:
    cd [project root folder]YYY/YYY && git checkout ui-update && git add . && git commit -m deploy-test-0 && ng build --prod && tar -czf YYY-dist.tar.gz dist/ && git add . && git commit -m deploy-test-1 && git push

# Step 2 - Download, Unpack, Deploy, 'Backup':
# On target server: unpack dist from Repo to web server folder:
cd /home/BBBBBBB/Projects/n/
git checkout ui-update
git pull
tar -xzf /home/BBBBBBB/Projects/n/YYY-dist.tar.gz -C /tmp
rsync -a /tmp/dist/ /var/www/melanoma.com/html
cp /home/BBBBBBB/Projects/n/YYY-dist.tar.gz /var/www/melanoma.com/html

    # Single line:
    cd /home/BBBBBBB/Projects/n/ && git checkout ui-update && git pull && tar -xzf /home/BBBBBBB/Projects/n/YYY-dist.tar.gz -C /tmp && rsync -a /tmp/dist/ /var/www/melanoma.com/html && cp /home/BBBBBBB/Projects/n/YYY-dist.tar.gz /var/www/melanoma.com/html

# Q&A
# Why rsync not mv?
# See here: https://askubuntu.com/questions/269775/mv-directory-not-empty



More reading: 

https://stackoverflow.com/questions/28305120/differences-between-express-router-and-app-get

// FB CONS:

https://crisp.chat/blog/why-you-should-never-use-firebase-realtime-database/


Migrate Mongo to Fire:
https://gist.github.com/ultimagriever/e2a60d348fe71c3a5d7ab461fc56fce4


https://stackoverflow.com/questions/29223835/mongodb-vs-firebase


Google Cloud: 
https://cloud.google.com/nodejs/getting-started/deploy-mongodb


Update: CORS

    Helped:
    https://jonathanmh.com/how-to-enable-cors-in-express-js-node-js/

    https://codeburst.io/express-js-on-cloud-functions-for-firebase-86ed26f9144c

    https://mhaligowski.github.io/blog/2017/03/10/cors-in-cloud-functions.html

    https://firebase.google.com/docs/functions/http-events

    